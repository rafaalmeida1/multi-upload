version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: multiupload_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: multiupload
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - multiupload_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  api:
    build: .
    container_name: multiupload_api
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres123
      DB_NAME: multiupload
      JWT_SECRET: seu_jwt_secret_super_seguro_aqui_mude_em_producao_123456789
      PORT: 8080
      UPLOAD_PATH: /app/uploads
      ENVIRONMENT: production
    volumes:
      - uploads_data:/app/uploads
    ports:
      - "8080:8080"
    networks:
      - multiupload_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local

networks:
  multiupload_network:
    driver: bridge
